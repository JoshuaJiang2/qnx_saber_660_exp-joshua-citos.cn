/*
 * Quad/Dual Device Configuration Data  - this is not read by the
 * iMX6 bootloader. The values in the table are applied post-boot using
 * apply_mx6_sdl_dcd_values()
 */
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5a8, 0x00000028)
DCD_ENTRY_QUAD(2, MX6X_IOMUXC_BASE  + 0x5b0, 0x00000028)
DCD_ENTRY_QUAD(3, MX6X_IOMUXC_BASE  + 0x524, 0x00000028)
DCD_ENTRY_QUAD(4, MX6X_IOMUXC_BASE  + 0x51c, 0x00000028)

DCD_ENTRY_QUAD(5, MX6X_IOMUXC_BASE  + 0x518, 0x00000028)
DCD_ENTRY_QUAD(6, MX6X_IOMUXC_BASE  + 0x50c, 0x00000028)
DCD_ENTRY_QUAD(7, MX6X_IOMUXC_BASE  + 0x5b8, 0x00000028)
DCD_ENTRY_QUAD(8, MX6X_IOMUXC_BASE  + 0x5c0, 0x00000028)

DCD_ENTRY_QUAD(9, MX6X_IOMUXC_BASE  + 0x5ac, 0x00000028)
DCD_ENTRY_QUAD(10, MX6X_IOMUXC_BASE + 0x5b4, 0x00000028)
DCD_ENTRY_QUAD(11, MX6X_IOMUXC_BASE + 0x528, 0x00000028)
DCD_ENTRY_QUAD(12, MX6X_IOMUXC_BASE + 0x520, 0x00000028)

DCD_ENTRY_QUAD(13, MX6X_IOMUXC_BASE + 0x514, 0x00000028)
DCD_ENTRY_QUAD(14, MX6X_IOMUXC_BASE + 0x510, 0x00000028)
DCD_ENTRY_QUAD(15, MX6X_IOMUXC_BASE + 0x5bc, 0x00000028)
DCD_ENTRY_QUAD(16, MX6X_IOMUXC_BASE + 0x5c4, 0x00000028)

DCD_ENTRY_QUAD(17, MX6X_IOMUXC_BASE + 0x56c, 0x00000030)
DCD_ENTRY_QUAD(18, MX6X_IOMUXC_BASE + 0x578, 0x00000030)
DCD_ENTRY_QUAD(19, MX6X_IOMUXC_BASE + 0x588, 0x00000030)
DCD_ENTRY_QUAD(20, MX6X_IOMUXC_BASE + 0x594, 0x00000030)

DCD_ENTRY_QUAD(21, MX6X_IOMUXC_BASE + 0x57c, 0x00000030)
DCD_ENTRY_QUAD(22, MX6X_IOMUXC_BASE + 0x590, 0x00000030)
DCD_ENTRY_QUAD(23, MX6X_IOMUXC_BASE + 0x598, 0x00000030)
DCD_ENTRY_QUAD(24, MX6X_IOMUXC_BASE + 0x58c, 0x00000000)

DCD_ENTRY_QUAD(25, MX6X_IOMUXC_BASE + 0x59c, 0x00003030)
DCD_ENTRY_QUAD(26, MX6X_IOMUXC_BASE + 0x5a0, 0x00003030)
DCD_ENTRY_QUAD(27, MX6X_IOMUXC_BASE + 0x784, 0x00000028)
DCD_ENTRY_QUAD(28, MX6X_IOMUXC_BASE + 0x788, 0x00000028)

DCD_ENTRY_QUAD(29, MX6X_IOMUXC_BASE + 0x794, 0x00000028)
DCD_ENTRY_QUAD(30, MX6X_IOMUXC_BASE + 0x79c, 0x00000028)
DCD_ENTRY_QUAD(31, MX6X_IOMUXC_BASE + 0x7a0, 0x00000028)
DCD_ENTRY_QUAD(32, MX6X_IOMUXC_BASE + 0x7a4, 0x00000028)

DCD_ENTRY_QUAD(33, MX6X_IOMUXC_BASE + 0x7a8, 0x00000028)
DCD_ENTRY_QUAD(34, MX6X_IOMUXC_BASE + 0x748, 0x00000028)
DCD_ENTRY_QUAD(35, MX6X_IOMUXC_BASE + 0x74c, 0x00000030)
DCD_ENTRY_QUAD(36, MX6X_IOMUXC_BASE + 0x750, 0x00020000)

DCD_ENTRY_QUAD(37, MX6X_IOMUXC_BASE + 0x758, 0x00000000)
DCD_ENTRY_QUAD(38, MX6X_IOMUXC_BASE + 0x774, 0x00020000)
DCD_ENTRY_QUAD(39, MX6X_IOMUXC_BASE + 0x78c, 0x00000030)
DCD_ENTRY_QUAD(40, MX6X_IOMUXC_BASE + 0x798, 0x000C0000)

DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x81c, 0x33333333)
DCD_ENTRY_QUAD(42, MX6X_MMDC_P0_BASE + 0x820, 0x33333333)
DCD_ENTRY_QUAD(43, MX6X_MMDC_P0_BASE + 0x824, 0x33333333)
DCD_ENTRY_QUAD(44, MX6X_MMDC_P0_BASE + 0x828, 0x33333333)

DCD_ENTRY_QUAD(45, MX6X_MMDC_P1_BASE + 0x81c, 0x33333333)
DCD_ENTRY_QUAD(46, MX6X_MMDC_P1_BASE + 0x820, 0x33333333)
DCD_ENTRY_QUAD(47, MX6X_MMDC_P1_BASE + 0x824, 0x33333333)
DCD_ENTRY_QUAD(48, MX6X_MMDC_P1_BASE + 0x828, 0x33333333)

DCD_ENTRY_QUAD(49, MX6X_MMDC_P0_BASE + 0x018, 0x00001740)

DCD_ENTRY_QUAD(50, MX6X_MMDC_P0_BASE + 0x01c, 0x00008000)
DCD_ENTRY_QUAD(51, MX6X_MMDC_P0_BASE + 0x00c, 0x8A8F7975)
DCD_ENTRY_QUAD(52, MX6X_MMDC_P0_BASE + 0x010, 0xFF538E64)
DCD_ENTRY_QUAD(53, MX6X_MMDC_P0_BASE + 0x014, 0x01FF00DB)
DCD_ENTRY_QUAD(54, MX6X_MMDC_P0_BASE + 0x02c, 0x000026D2)

DCD_ENTRY_QUAD(55, MX6X_MMDC_P0_BASE + 0x030, 0x008F0E21)
DCD_ENTRY_QUAD(56, MX6X_MMDC_P0_BASE + 0x008, 0x09444040)
DCD_ENTRY_QUAD(57, MX6X_MMDC_P0_BASE + 0x004, 0x00020036)
DCD_ENTRY_QUAD(58, MX6X_MMDC_P0_BASE + 0x040, 0x00000047)
DCD_ENTRY_QUAD(59, MX6X_MMDC_P0_BASE + 0x000, 0x841A0000)

DCD_ENTRY_QUAD(60, MX6X_MMDC_P0_BASE + 0x01c, 0x04088032)
DCD_ENTRY_QUAD(61, MX6X_MMDC_P0_BASE + 0x01c, 0x00008033)
DCD_ENTRY_QUAD(62, MX6X_MMDC_P0_BASE + 0x01c, 0x00428031)
DCD_ENTRY_QUAD(63, MX6X_MMDC_P0_BASE + 0x01c, 0x09408030)

DCD_ENTRY_QUAD(64, MX6X_MMDC_P0_BASE + 0x01c, 0x04008040)
DCD_ENTRY_QUAD(65, MX6X_MMDC_P0_BASE + 0x800, 0xA1380003)
DCD_ENTRY_QUAD(66, MX6X_MMDC_P0_BASE + 0x020, 0x00005800)
DCD_ENTRY_QUAD(67, MX6X_MMDC_P0_BASE + 0x818, 0x00022227)
DCD_ENTRY_QUAD(68, MX6X_MMDC_P1_BASE + 0x818, 0x00022227)

/* Calibration values based on ARD and 528MHz */
DCD_ENTRY_QUAD(69, MX6X_MMDC_P0_BASE + 0x83c, 0x434B0358)
DCD_ENTRY_QUAD(70, MX6X_MMDC_P0_BASE + 0x840, 0x033D033C)
DCD_ENTRY_QUAD(71, MX6X_MMDC_P1_BASE + 0x83c, 0x03520362)
DCD_ENTRY_QUAD(72, MX6X_MMDC_P1_BASE + 0x840, 0x03480318)
DCD_ENTRY_QUAD(73, MX6X_MMDC_P0_BASE + 0x848, 0x41383A3C)
DCD_ENTRY_QUAD(74, MX6X_MMDC_P1_BASE + 0x848, 0x3F3C374A)
DCD_ENTRY_QUAD(75, MX6X_MMDC_P0_BASE + 0x850, 0x42434444)
DCD_ENTRY_QUAD(76, MX6X_MMDC_P1_BASE + 0x850, 0x4932473A)

DCD_ENTRY_QUAD(77, MX6X_MMDC_P0_BASE + 0x80c, 0x001F001F)
DCD_ENTRY_QUAD(78, MX6X_MMDC_P0_BASE + 0x810, 0x001F001F)

DCD_ENTRY_QUAD(79, MX6X_MMDC_P1_BASE + 0x80c, 0x001F001F)
DCD_ENTRY_QUAD(80, MX6X_MMDC_P1_BASE + 0x810, 0x001F001F)

DCD_ENTRY_QUAD(81, MX6X_MMDC_P0_BASE + 0x8b8, 0x00000800)
DCD_ENTRY_QUAD(82, MX6X_MMDC_P1_BASE + 0x8b8, 0x00000800)

DCD_ENTRY_QUAD(83, MX6X_MMDC_P0_BASE + 0x404, 0x00011006)
DCD_ENTRY_QUAD(84, MX6X_MMDC_P0_BASE + 0x004, 0x00025576)

DCD_ENTRY_QUAD(85, MX6X_MMDC_P0_BASE + 0x01c, 0x00000000)


/* enable AXI cache for VDOA/VPU/IPU */
DCD_ENTRY_QUAD(86, MX6X_IOMUXC_BASE + 0x010, 0xf00000ff)
/* set IPU Qos=0x7 */
DCD_ENTRY_QUAD(87, MX6X_IOMUXC_BASE + 0x018, 0x00070007)
DCD_ENTRY_QUAD(88, MX6X_IOMUXC_BASE + 0x01c, 0x00070007)

/* End of Quad DCD table */

//=============================================================================			
//init script for i.Mx6D DDR3			
//=============================================================================			
// Revision History			
// v01			
//=============================================================================			
			
wait = on			
//=============================================================================			
// Disable	WDOG		
//=============================================================================			
//setmem /16	0x020bc000 =	0x30	
			
//=============================================================================			
// Enable all clocks (they are disabled by ROM code)			
//=============================================================================			
setmem /32	0x020c4068 =	0xffffffff	
setmem /32	0x020c406c =	0xffffffff	
setmem /32	0x020c4070 =	0xffffffff	
setmem /32	0x020c4074 =	0xffffffff	
setmem /32	0x020c4078 =	0xffffffff	
setmem /32	0x020c407c =	0xffffffff	
setmem /32	0x020c4080 =	0xffffffff	
setmem /32	0x020c4084 =	0xffffffff	
			
//=============================================================================			
// IOMUX			
//=============================================================================			
//DDR IO TYPE:			
setmem /32	0x020e0798 =	0x000C0000	// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE 
DCD_ENTRY_QUAD(40, MX6X_IOMUXC_BASE + 0x798, 0x000C0000)
setmem /32	0x020e0758 =	0x00000000	// IOMUXC_SW_PAD_CTL_GRP_DDRPKE 
DCD_ENTRY_QUAD(37, MX6X_IOMUXC_BASE + 0x758, 0x00000000)			
//CLOCK:			
setmem /32	0x020e0588 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0
DCD_ENTRY_QUAD(19, MX6X_IOMUXC_BASE + 0x588, 0x00000028)
setmem /32	0x020e0594 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1
DCD_ENTRY_QUAD(20, MX6X_IOMUXC_BASE + 0x594, 0x00000028)	

//ADDRESS:			
setmem /32	0x020e056c =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DCD_ENTRY_QUAD(17, MX6X_IOMUXC_BASE + 0x56c, 0x00000028)
setmem /32	0x020e0578 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DCD_ENTRY_QUAD(18, MX6X_IOMUXC_BASE + 0x578, 0x00000028)
setmem /32	0x020e074c =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_ADDDS 
DCD_ENTRY_QUAD(35, MX6X_IOMUXC_BASE + 0x74c, 0x00000028)

//Control:			
setmem /32	0x020e057c =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET
DCD_ENTRY_QUAD(21, MX6X_IOMUXC_BASE + 0x57c, 0x00000028)
setmem /32	0x020e058c =	0x00000000	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DCD_ENTRY_QUAD(24, MX6X_IOMUXC_BASE + 0x58c, 0x00000000)
setmem /32	0x020e059c =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DCD_ENTRY_QUAD(25, MX6X_IOMUXC_BASE + 0x59c, 0x00000028)
setmem /32	0x020e05a0 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DCD_ENTRY_QUAD(26, MX6X_IOMUXC_BASE + 0x5a0, 0x00000028)
setmem /32	0x020e078c =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_CTLDS 
DCD_ENTRY_QUAD(39, MX6X_IOMUXC_BASE + 0x78c, 0x00000028)

//Data Strobes:			
setmem /32	0x020e0750 =	0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL 
DCD_ENTRY_QUAD(36, MX6X_IOMUXC_BASE + 0x750, 0x00020000)
setmem /32	0x020e05a8 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5a8, 0x00000028)
setmem /32	0x020e05b0 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5b0, 0x00000028)
setmem /32	0x020e0524 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x524, 0x00000028)
setmem /32	0x020e051c =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x51c, 0x00000028)
//setmem /32	0x020e0518 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x518, 0x00000028)
//setmem /32	0x020e050c =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x50c, 0x00000028)
//setmem /32	0x020e05b8 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5b8, 0x00000028)
//setmem /32	0x020e05c0 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5c0, 0x00000028)
			
//Data:			
setmem /32	0x020e0774 =	0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x774, 0x00020000)
setmem /32	0x020e0784 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B0DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x784, 0x00000028)
setmem /32	0x020e0788 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B1DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x788, 0x00000028)
setmem /32	0x020e0794 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B2DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x794, 0x00000028)
setmem /32	0x020e079c =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B3DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x79c, 0x00000028)
//setmem /32	0x020e07a0 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B4DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x7a0, 0x00000028)
//setmem /32	0x020e07a4 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B5DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x7a4, 0x00000028)
//setmem /32	0x020e07a8 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B6DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x7a8, 0x00000028)
//setmem /32	0x020e0748 =	0x00000028	// IOMUXC_SW_PAD_CTL_GRP_B7DS 
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x748, 0x00000028)
			
setmem /32	0x020e05ac =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5ac, 0x00000028)
setmem /32	0x020e05b4 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5b4, 0x00000028)
setmem /32	0x020e0528 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x528, 0x00000028)
setmem /32	0x020e0520 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x520, 0x00000028)
//setmem /32	0x020e0514 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x514, 0x00000028)
//setmem /32	0x020e0510 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x510, 0x00000028)
//setmem /32	0x020e05bc =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5bc, 0x00000028)
//setmem /32	0x020e05c4 =	0x00000028	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7
DCD_ENTRY_QUAD(1, MX6X_IOMUXC_BASE  + 0x5c4, 0x00000028)
			
			
//=============================================================================			
// DDR Controller Registers			
//=============================================================================			
// Manufacturer:	Micron		
// Device Part Number:	MT41K128M16JT-125		
// Clock Freq.: 	528MHz		
// Density per CS in Gb: 	4		
// Chip Selects used:	1		
// Number of Banks:	8		
// Row address:    	14		
// Column address: 	10		
// Data bus width	32		
//=============================================================================			
setmem /32	0x021b001c =	0x00008000	MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x00008000)

//=============================================================================			
// Calibration setup.			
//=============================================================================			
setmem /32	0x021b0800 =	0xA1390003	// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x800, 0xA1390003)

// For target board, may need to run write leveling calibration to fine tune these settings.			
setmem /32	0x021b080c  =	0x002A002C
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x80c, 0x002A002C)
setmem /32	0x021b0810 =	0x0031002A
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x810, 0x0031002A)
//setmem /32	0x021b480c  =	0x00000000	
//setmem /32	0x021b4810 =	0x00000000	
			
////Read DQS Gating calibration			
setmem /32	0x021b083c =	0x03440354	// MPDGCTRL0 PHY0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x83c, 0x03440354)
setmem /32	0x021b0840 =	0x03400340	// MPDGCTRL1 PHY0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x840, 0x03400340)
//setmem /32	0x021b483c =	0x00000000	// MPDGCTRL0 PHY1
//setmem /32	0x021b4840 =	0x00000000	// MPDGCTRL1 PHY1
			
//Read calibration			
setmem /32	0x021b0848 =	0x3A36383A	// MPRDDLCTL PHY0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x848, 0x3A36383A)
//setmem /32	0x021b4848 =	0x40404040	// MPRDDLCTL PHY1
			
//Write calibration                     			
setmem /32	0x021b0850 =	0x3E3C403C	// MPWRDLCTL PHY0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x850, 0x3E3C403C)
//setmem /32	0x021b4850 =	0x40404040	// MPWRDLCTL PHY1
			
//read data bit delay: (3 is the reccommended default value, although out of reset value is 0)			
setmem /32	0x021b081c =	0x33333333	// DDR_PHY_P0_MPREDQBY0DL3
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x81c, 0x33333333)
setmem /32	0x021b0820 =	0x33333333	// DDR_PHY_P0_MPREDQBY1DL3
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x820, 0x33333333)
setmem /32	0x021b0824 =	0x33333333	// DDR_PHY_P0_MPREDQBY2DL3
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x824, 0x33333333)
setmem /32	0x021b0828 =	0x33333333	// DDR_PHY_P0_MPREDQBY3DL3
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x828, 0x33333333)
//setmem /32	0x021b481c =	0x33333333	// DDR_PHY_P1_MPREDQBY0DL3
//setmem /32	0x021b4820 =	0x33333333	// DDR_PHY_P1_MPREDQBY1DL3
//setmem /32	0x021b4824 =	0x33333333	// DDR_PHY_P1_MPREDQBY2DL3
//setmem /32	0x021b4828 =	0x33333333	// DDR_PHY_P1_MPREDQBY3DL3
			
//For i.mx6qd parts of versions A & B (v1.0, v1.1), uncomment the following lines. For version C (v1.2), keep commented			
//setmem /32	0x021b08c0 =	0x24911492	// fine tune SDCLK duty cyc to low - seen to improve measured duty cycle of i.mx6
//setmem /32	0x021b48c0 =	0x24911492	
			
// Complete calibration by forced measurement:                  			
setmem /32	0x021b08b8 = 	0x00000800	// DDR_PHY_P0_MPMUR0, frc_msr
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x8b8, 0x00000800)
//setmem /32	0x021b48b8 = 	0x00000800	// DDR_PHY_P0_MPMUR0, frc_msr
//=============================================================================			
// Calibration setup end			
//=============================================================================			
			
//MMDC init: 			
setmem /32	0x021b0004 =	0x00020036	// MMDC0_MDPDC
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x004, 0x00020036)
setmem /32	0x021b0008 =	0x09444040	// MMDC0_MDOTC
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x008, 0x09444040)
setmem /32	0x021b000c =	0x54597955	// MMDC0_MDCFG0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x00c, 0x54597955)
setmem /32	0x021b0010 =	0xFF328F64	// MMDC0_MDCFG1
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x010, 0xFF328F64)
setmem /32	0x021b0014 =	0x01FF00DB	// MMDC0_MDCFG2
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x014, 0x01FF00DB)

//MDMISC: RALAT kept to the high level of 5. 			
//MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits: 			
//a. better operation at low frequency, for LPDDR2 freq < 100MHz, change RALAT to 3			
//b. Small performence improvment 			
setmem /32	0x021b0018 =	0x00011740	// MMDC0_MDMISC
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x018, 0x00011740)
setmem /32	0x021b001c =	0x00008000	// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x00008000)
setmem /32	0x021b002c =	0x000026D2	// MMDC0_MDRWD
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x02c, 0x000026D2)
setmem /32	0x021b0030 =	0x00591023	// MMDC0_MDOR
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x030, 0x00591023)
setmem /32	0x021b0040 =	0x00000017	// Chan0 CS0_END 
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x040, 0x00000017)
setmem /32	0x021b0000 =	0x83190000	// MMDC0_MDCTL
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x000, 0x83190000)
			
//Mode register writes                 			
setmem /32	0x021b001c =	0x02088032	// MMDC0_MDSCR, MR2 write, CS0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x02088032)
setmem /32	0x021b001c =	0x00008033	// MMDC0_MDSCR, MR3 write, CS0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x00008033)
setmem /32	0x021b001c =	0x00048031	// MMDC0_MDSCR, MR1 write, CS0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x00048031)
setmem /32	0x021b001c =	0x19408030	// MMDC0_MDSCR, MR0write, CS0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x19408030)
setmem /32	0x021b001c =	0x04008040	// MMDC0_MDSCR, ZQ calibration command sent to device on CS0
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x04008040)


//setmem /32	0x021b001c =	0x0208803A	// MMDC0_MDSCR, MR2 write, CS1
//setmem /32	0x021b001c =	0x0000803B	// MMDC0_MDSCR, MR3 write, CS1
//setmem /32	0x021b001c =	0x00048039	// MMDC0_MDSCR, MR1 write, CS1
//setmem /32	0x021b001c =	0x19408038	// MMDC0_MDSCR, MR0write, CS1
//setmem /32	0x021b001c =	0x04008048	// MMDC0_MDSCR, ZQ calibration command sent to device on CS1
			
setmem /32	0x021b0020 =	0x00007800	// MMDC0_MDREF
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x020, 0x00007800)			
setmem /32	0x021b0818 =	0x00022227	// DDR_PHY_P0_MPODTCTRL
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x818, 0x00022227)
//setmem /32	0x021b4818 =	0x00022227	// DDR_PHY_P1_MPODTCTRL
			
setmem /32	0x021b0004 =	0x00025576	// MMDC0_MDPDC now SDCTL power down enabled
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x004, 0x00025576)			
setmem /32	0x021b0404 =	0x00011006	// MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x404, 0x00011006)			
setmem /32	0x021b001c =	0x00000000	// MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)
DCD_ENTRY_QUAD(41, MX6X_MMDC_P0_BASE + 0x01c, 0x00000000)

			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
